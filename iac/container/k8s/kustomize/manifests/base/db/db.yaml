apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-claim
  labels:
    io: db-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: db
spec:
  type: ClusterIP
  selector:
    app: db
  ports:
  - name: tcp-db
    protocol: TCP
    port: 5432
    targetPort: 5432
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: db:latest
          ports:
            - containerPort: 5432
          env:
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DB_USER_NAME
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DB_USER_PASSWORD
            - name: DB_INITDB_ARGS
              value: --encoding=UTF-8 --locale=C
          volumeMounts:
            - mountPath: /var/lib/db/data
              name: db-claim
          resources: {}
      hostname: dev-db-sv
      restartPolicy: Always
      volumes:
        - name: db-claim
          persistentVolumeClaim:
            claimName: db-claim
status: {}
